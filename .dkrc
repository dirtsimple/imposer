#!/usr/bin/env bash
# ---
# Add your own commands, functions, and variables here.  Define defaults first,
# then `dk use:` the desired devkit modules, and then define any overrides to
# the devkit defaults.
# ---

# Available modules (uncomment to use):

dk use: peridot           # run tests using peridot-php
dk use: cram              # run tests using the "cram" functional test tool

dk use: entr-watch        # watch files and re-run tests or other commands
dk use: shell-console     # make the "console" command enter a subshell
dk use: composer          # utilities for accessing composer-based dev tools
dk use: bash32            # enable doing tests/console/etc. in bash3.2 w/docker

# Define overrides, new commands, functions, etc. here:

for REPLY in mdsh jqmd loco; do
    on boot require $REPLY github bashup/$REPLY master bin/$REPLY
done

on boot require realpaths     github bashup/realpaths master realpaths
on boot require bashup.events github bashup/events    master bashup.events

[[ -f composer.lock ]] || on boot composer install

on build jqmd -R --out bin/imposer --compile imposer.md
on build chmod +x bin/imposer

on "test_files" eval 'ls src/*.php'

# When watching, use the spec reporter
before "files_changed" export PERIDOT_OPTIONS="-r spec"

# But use the dot reporter for plain "Test"
export PERIDOT_OPTIONS="-r dot"

dk.unit()     { peridot --watch --force-colors specs; }